name: Build, Test, and Push Ubuntu Cloud Image (AMD64)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Packer
      uses: hashicorp/setup-packer@main
      with:
        version: '1.9.1'

    - name: Setup OPA
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest

    - name: Install QEMU and dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86 qemu-utils
        sudo apt-get install -y cloud-image-utils

    - name: Verify QEMU installation
      run: qemu-system-x86_64 --version

    - name: Packer Init
      run: packer init .
      env:
        PACKER_GITHUB_API_TOKEN: ${{ secrets.PACKER_GITHUB_API_TOKEN }}
  
    - name: Packer Validate
      run: packer validate .

    - name: Packer Build
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        PACKER_GITHUB_API_TOKEN: ${{ secrets.PACKER_GITHUB_API_TOKEN }}
      run: |
        PACKER_LOG=1 packer build \
          -var "ssh_password=$SSH_PASSWORD" \
          .

    - name: Generate OPA Input
      run: |
        chmod +x scripts/generate_opa_input.sh
        ./scripts/generate_opa_input.sh output-amd64/ubuntu-cloud-base-focal-amd64.qcow2 > opa_input.json

    - name: Run OPA Tests
      run: |
        opa eval --format pretty --data policies/image_security.rego --input opa_input.json "data.image_security.allow"
        if [ $? -ne 0 ]; then
          echo "OPA tests failed. Image does not meet security requirements."
          exit 1
        fi

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to GitHub Packages
      run: |
        gzip -dc output-amd64/ubuntu-cloud-base-focal-amd64.qcow2.gz > ubuntu-cloud-base-amd64.qcow2
        docker import ubuntu-cloud-base-amd64.qcow2 ghcr.io/${{ github.repository_owner }}/ubuntu-cloud-base-amd64:latest
        docker push ghcr.io/${{ github.repository_owner }}/ubuntu-cloud-base-amd64:latest
        docker tag ghcr.io/${{ github.repository_owner }}/ubuntu-cloud-base-amd64:latest ghcr.io/${{ github.repository_owner }}/ubuntu-cloud-base-amd64:${{ github.sha }}
        docker push ghcr.io/${{ github.repository_owner }}/ubuntu-cloud-base-amd64:${{ github.sha }}

    - name: Upload QCOW2 image
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu-cloud-base-amd64.qcow2.gz
        path: output-amd64/ubuntu-cloud-base-focal-amd64.qcow2.gz

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3

    - name: Upload Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        asset_name="ubuntu-cloud-base-focal-amd64.qcow2.gz"
        curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
             -H "Content-Type: application/gzip" \
             --data-binary @"ubuntu-cloud-base-amd64.qcow2.gz/${asset_name}" \
             "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=${asset_name}"